import{element as y,text as k,insert as A,append as V,set_data as x,noop as h,detach as S,compute_rest_props as v,binding_callbacks as j,assign as C,exclude_internal_props as q,SvelteComponent as D,safe_not_equal as E,init as K}from"svelte/internal";import"svelte/internal/disclose-version";import{createEventDispatcher as L,onMount as M}from"svelte";import{reactive as O,h as P,createApp as U}from"@histoire/vendors/vue";function W(a){let t,o=a[0].name+"",r;return{c(){t=y("div"),r=k(o)},m(i,n){A(i,t,n),V(t,r),a[3](t)},p(i,[n]){n&1&&o!==(o=i[0].name+"")&&x(r,o)},i:h,o:h,d(i){i&&S(t),a[3](null)}}}function z(a,t,o){const r=["controlComponent","value"];let i=v(t,r),{controlComponent:n}=t,{value:s}=t;const b=L();let l,m;const p=O({});function f(e,c){Object.assign(p,{value:e,attrs:c})}M(()=>{f(s,i),m=U({render(){const e={};if(n.emits)for(const c in n.emits){const u=Array.isArray(n.emits)?n.emits[c]:c,d=u==="input"?"update:modelValue":u;e[`on${d.charAt(0).toUpperCase()}${d.substring(1)}`]=(..._)=>{u==="update:modelValue"?o(2,s=_[0]):b(u,..._)}}return P(n,{modelValue:s,...p.attrs,...e,key:"component"})}}),m.mount(l)});function g(e){j[e?"unshift":"push"](()=>{l=e,o(1,l)})}return a.$$set=e=>{t=C(C({},t),q(e)),o(8,i=v(t,r)),"controlComponent"in e&&o(0,n=e.controlComponent),"value"in e&&o(2,s=e.value)},a.$$.update=()=>{f(s,i)},[n,l,s,g]}class I extends D{constructor(t){super(),K(this,t,z,W,E,{controlComponent:0,value:2})}}export{I as default};
