function b(){}function w(t,n){for(const e in n)t[e]=n[e];return t}function v(t){return t()}function A(){return Object.create(null)}function j(t){t.forEach(v)}function E(t){return typeof t=="function"}function B(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}function C(t){return Object.keys(t).length===0}function y(t,...n){if(t==null){for(const r of n)r(void 0);return b}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function F(t){let n;return y(t,e=>n=e)(),n}function P(t,n,e){t.$$.on_destroy.push(y(n,e))}function S(t,n,e,r){if(t){const o=m(t,n,e,r);return t[0](o)}}function m(t,n,e,r){return t[1]&&r?w(e.ctx.slice(),t[1](r(n))):e.ctx}function U(t,n,e,r){if(t[2]&&r){const o=t[2](r(e));if(n.dirty===void 0)return o;if(typeof o=="object"){const l=[],f=Math.max(n.dirty.length,o.length);for(let u=0;u<f;u+=1)l[u]=n.dirty[u]|o[u];return l}return n.dirty|o}return n.dirty}function D(t,n,e,r,o,l){if(o){const f=m(n,e,r,l);t.p(f,o)}}function G(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let r=0;r<e;r++)n[r]=-1;return n}return-1}function H(t){const n={};for(const e in t)e[0]!=="$"&&(n[e]=t[e]);return n}function I(t,n,e){return t.set(e),n}function J(t){return t&&E(t.destroy)?t.destroy:b}let i;function _(t){i=t}function x(){if(!i)throw new Error("Function called outside component initialization");return i}function K(t){x().$$.on_mount.push(t)}function L(t){x().$$.after_update.push(t)}const a=[],p=[];let c=[];const g=[],k=Promise.resolve();let h=!1;function O(){h||(h=!0,k.then(z))}function N(){return O(),k}function q(t){c.push(t)}const d=new Set;let s=0;function z(){if(s!==0)return;const t=i;do{try{for(;s<a.length;){const n=a[s];s++,_(n),M(n.$$)}}catch(n){throw a.length=0,s=0,n}for(_(null),a.length=0,s=0;p.length;)p.pop()();for(let n=0;n<c.length;n+=1){const e=c[n];d.has(e)||(d.add(e),e())}c.length=0}while(a.length);for(;g.length;)g.pop()();h=!1,d.clear(),_(t)}function M(t){if(t.fragment!==null){t.update(),j(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(q)}}function Q(t){const n=[],e=[];c.forEach(r=>t.indexOf(r)===-1?n.push(r):e.push(r)),e.forEach(r=>r()),c=n}export{I as A,y as B,J as C,L as a,p as b,P as c,S as d,U as e,w as f,G as g,H as h,A as i,z as j,E as k,C as l,q as m,b as n,K as o,Q as p,i as q,j as r,B as s,N as t,D as u,_ as v,v as w,a as x,O as y,F as z};
